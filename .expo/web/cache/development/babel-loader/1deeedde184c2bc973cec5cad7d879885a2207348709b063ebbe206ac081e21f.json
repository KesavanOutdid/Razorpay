{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Button_1 = function Button_1(props) {\n  var expand = React.useRef(new Animated.Value(0)).current;\n  var expand_Up = function expand_Up() {\n    Animated.spring(expand, {\n      toValue: 5,\n      useNativeDriver: true\n    }).start();\n  };\n  var expand_Down = function expand_Down() {\n    Animated.spring(expand, {\n      toValue: -5,\n      bounciness: 12,\n      useNativeDriver: true\n    }).start();\n  };\n  var animate_button = function animate_button() {\n    expand_Up;\n    expand_Down;\n  };\n  return _jsx(Animated.View, {\n    style: [styles.container, {\n      transform: [{\n        translateY: expand\n      }]\n    }],\n    children: _jsx(Pressable, {\n      onPressIn: expand_Up,\n      onPressOut: expand_Down,\n      style: styles.button1,\n      onPress: props.onPress,\n      disabled: props.disabled,\n      children: _jsx(Text, {\n        style: {\n          alignItems: 'center',\n          fontFamily: 'OpenSans_600SemiBold',\n          fontSize: 16,\n          color: '#ffffff'\n        },\n        children: props.title\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%'\n  },\n  button1: {\n    paddingVertical: \"5.4%\",\n    backgroundColor: '#431cf3',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Button_1;","map":{"version":3,"names":["React","StyleSheet","Text","Pressable","Animated","jsx","_jsx","Button_1","props","expand","useRef","Value","current","expand_Up","spring","toValue","useNativeDriver","start","expand_Down","bounciness","animate_button","View","style","styles","container","transform","translateY","children","onPressIn","onPressOut","button1","onPress","disabled","alignItems","fontFamily","fontSize","color","title","create","width","paddingVertical","backgroundColor","justifyContent"],"sources":["F:/kesav/ReactNative/MyReactNative/components/button1.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text,  Pressable, Animated} from 'react-native';\r\n\r\n\r\nconst Button_1 = props => {\r\n\r\n  const expand = React.useRef(new Animated.Value(0)).current;\r\n\r\n  const expand_Up = () => {\r\n    Animated.spring(expand, {\r\n      toValue: 5,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n  const expand_Down = () => {\r\n    Animated.spring(expand, {\r\n      toValue: -5,\r\n      bounciness: 12,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  const animate_button = () => {\r\n    expand_Up;\r\n    expand_Down;\r\n  }\r\n\r\n\r\n  return(\r\n    <Animated.View \r\n    style={[styles.container, \r\n      {\r\n        transform:[{translateY:expand}]\r\n      }\r\n    ]}\r\n     >\r\n      <Pressable \r\n        onPressIn={expand_Up}\r\n        onPressOut={expand_Down}\r\n        style={styles.button1} \r\n        onPress={ props.onPress}\r\n        disabled={props.disabled}\r\n        >\r\n        <Text style={{  \r\n          alignItems: 'center',\r\n          fontFamily: 'OpenSans_600SemiBold',\r\n         fontSize:16, color: '#ffffff' \r\n         }}>{props.title}</Text>\r\n      </Pressable>\r\n    </Animated.View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    width: '100%',\r\n    // backgroundColor: Colors.test2\r\n  },\r\n  button1: {\r\n    paddingVertical: \"5.4%\",\r\n    backgroundColor: '#431cf3',\r\n    alignItems :'center',\r\n    justifyContent : 'center',\r\n    \r\n  }\r\n})\r\n\r\nexport default Button_1;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAI1B,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAGC,KAAK,EAAI;EAExB,IAAMC,MAAM,GAAGT,KAAK,CAACU,MAAM,CAAC,IAAIN,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAE1D,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtBT,QAAQ,CAACU,MAAM,CAACL,MAAM,EAAE;MACtBM,OAAO,EAAE,CAAC;MACVC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACZ,CAAC;EACD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBd,QAAQ,CAACU,MAAM,CAACL,MAAM,EAAE;MACtBM,OAAO,EAAE,CAAC,CAAC;MACXI,UAAU,EAAE,EAAE;MACdH,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACZ,CAAC;EAED,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BP,SAAS;IACTK,WAAW;EACb,CAAC;EAGD,OACEZ,IAAA,CAACF,QAAQ,CAACiB,IAAI;IACdC,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EACtB;MACEC,SAAS,EAAC,CAAC;QAACC,UAAU,EAACjB;MAAM,CAAC;IAChC,CAAC,CACD;IAAAkB,QAAA,EAEArB,IAAA,CAACH,SAAS;MACRyB,SAAS,EAAEf,SAAU;MACrBgB,UAAU,EAAEX,WAAY;MACxBI,KAAK,EAAEC,MAAM,CAACO,OAAQ;MACtBC,OAAO,EAAGvB,KAAK,CAACuB,OAAQ;MACxBC,QAAQ,EAAExB,KAAK,CAACwB,QAAS;MAAAL,QAAA,EAEzBrB,IAAA,CAACJ,IAAI;QAACoB,KAAK,EAAE;UACXW,UAAU,EAAE,QAAQ;UACpBC,UAAU,EAAE,sBAAsB;UACnCC,QAAQ,EAAC,EAAE;UAAEC,KAAK,EAAE;QACpB,CAAE;QAAAT,QAAA,EAAEnB,KAAK,CAAC6B;MAAK,CAAO;IAAC,CACf;EAAC,CACC,CAAC;AAEpB,CAAC;AAED,IAAMd,MAAM,GAAGtB,UAAU,CAACqC,MAAM,CAAC;EAC/Bd,SAAS,EAAC;IACRe,KAAK,EAAE;EAET,CAAC;EACDT,OAAO,EAAE;IACPU,eAAe,EAAE,MAAM;IACvBC,eAAe,EAAE,SAAS;IAC1BR,UAAU,EAAE,QAAQ;IACpBS,cAAc,EAAG;EAEnB;AACF,CAAC,CAAC;AAEF,eAAenC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}