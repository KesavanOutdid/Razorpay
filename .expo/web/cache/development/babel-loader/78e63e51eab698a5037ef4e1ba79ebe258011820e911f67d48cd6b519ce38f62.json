{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { COLORS, images, SIZES, FONTS } from \"../constants\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { latestList, shoesList1, shoesList2 } from \"../constants/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: navigation.goBack\n    }), _jsx(Logo, {}), _jsx(Header, {\n      children: \"Welcome back.\"\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('ResetPasswordScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Forgot your password?\"\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onLoginPressed,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.replace('RegisterScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n};\nexport default Home;","map":{"version":3,"names":["React","SafeAreaView","COLORS","images","SIZES","FONTS","Feather","latestList","shoesList1","shoesList2","jsx","_jsx","jsxs","_jsxs","Home","_ref","navigation","Background","children","BackButton","goBack","Logo","Header","TextInput","label","returnKeyType","value","email","onChangeText","text","setEmail","error","errorText","autoCapitalize","autoCompleteType","textContentType","keyboardType","password","setPassword","secureTextEntry","View","style","styles","forgotPassword","TouchableOpacity","onPress","navigate","Text","forgot","Button","mode","onLoginPressed","row","replace","link"],"sources":["F:/kesav/ReactNative/MyReactNative/screens/Home.js"],"sourcesContent":["import { View, Text, Image, ScrollView, FlatList, TouchableOpacity } from 'react-native'\nimport React from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { COLORS, images, SIZES, FONTS } from '../constants'\nimport { Feather } from \"@expo/vector-icons\"\nimport { latestList, shoesList1, shoesList2 } from '../constants/data'\n\nconst Home = ({ navigation }) => {\n  return (\n    <Background>\n    <BackButton goBack={navigation.goBack} />\n    <Logo />\n    <Header>Welcome back.</Header>\n    <TextInput\n      label=\"Email\"\n      returnKeyType=\"next\"\n      value={email.value}\n      onChangeText={(text) => setEmail({ value: text, error: '' })}\n      error={!!email.error}\n      errorText={email.error}\n      autoCapitalize=\"none\"\n      autoCompleteType=\"email\"\n      textContentType=\"emailAddress\"\n      keyboardType=\"email-address\"\n    />\n    <TextInput\n      label=\"Password\"\n      returnKeyType=\"done\"\n      value={password.value}\n      onChangeText={(text) => setPassword({ value: text, error: '' })}\n      error={!!password.error}\n      errorText={password.error}\n      secureTextEntry\n    />\n    <View style={styles.forgotPassword}>\n      <TouchableOpacity\n        onPress={() => navigation.navigate('ResetPasswordScreen')}\n      >\n        <Text style={styles.forgot}>Forgot your password?</Text>\n      </TouchableOpacity>\n    </View>\n    <Button mode=\"contained\" onPress={onLoginPressed}>\n      Login\n    </Button>\n    <View style={styles.row}>\n      <Text>Donâ€™t have an account? </Text>\n      <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n        <Text style={styles.link}>Sign up</Text>\n      </TouchableOpacity>\n    </View>\n  </Background>\n  )\n}\n\nexport default Home"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}