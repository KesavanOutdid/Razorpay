{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: '',\n      error: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var onLoginPressed = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var nameError = nameValidator(name.value);\n      var passwordError = passwordValidator(password.value);\n      if (nameError || passwordError) {\n        setName(_objectSpread(_objectSpread({}, name), {}, {\n          error: nameError\n        }));\n        setPassword(_objectSpread(_objectSpread({}, password), {}, {\n          error: passwordError\n        }));\n        return;\n      }\n      try {\n        var response = yield fetch('http://122.166.210.142:8052/CheckLoginCredentials', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            loginUsername: name.value,\n            loginPassword: password.value\n          })\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          var message = data.message || 'Login successfully. The easiest way to start with your amazing application.';\n          Alert.alert('Login successfully', message);\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'BottomTabNavigation'\n            }]\n          });\n        } else {\n          var errorData = yield response.json();\n          var errorMessage = errorData.error || 'Login failed. Please check your credentials.';\n          Alert.alert('Login Failed', errorMessage);\n        }\n      } catch (error) {\n        Alert.alert('Error', 'An error occurred during login. Please try again later.');\n      }\n    });\n    return function onLoginPressed() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: navigation.goBack\n    }), _jsx(Logo, {}), _jsx(Header, {\n      children: \"Welcome back\"\n    }), _jsx(TextInput, {\n      label: \"Name\",\n      returnKeyType: \"next\",\n      value: name.value,\n      onChangeText: function onChangeText(text) {\n        return setName({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!name.error,\n      errorText: name.error\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(number) {\n        return setPassword({\n          value: number,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onLoginPressed,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.replace('RegisterScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","TouchableOpacity","StyleSheet","View","Alert","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","nameValidator","passwordValidator","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","name","setName","_useState3","_useState4","password","setPassword","onLoginPressed","_ref2","_asyncToGenerator","nameError","passwordError","_objectSpread","response","fetch","method","headers","body","JSON","stringify","loginUsername","loginPassword","ok","data","json","message","alert","reset","index","routes","errorData","errorMessage","apply","arguments","children","goBack","label","returnKeyType","onChangeText","text","errorText","number","secureTextEntry","mode","onPress","style","styles","row","replace","link","create","forgotPassword","width","alignItems","marginBottom","flexDirection","marginTop","forgot","fontSize","color","colors","secondary","fontWeight","primary"],"sources":["F:/kesav/ReactNative/MyReactNative/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View, Alert } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { nameValidator } from '../helpers/nameValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\n\nexport default function LoginScreen({ navigation }) {\n  const [name, setName] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n  // alert(JSON.stringify(name));\n  // alert(JSON.stringify(password));\n\n  const onLoginPressed = async () => {    \n    const nameError = nameValidator(name.value)\n    const passwordError = passwordValidator(password.value)\n    if ( nameError || passwordError) {\n      setName({ ...name, error: nameError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n   \n    try {\n      const response = await fetch('http://122.166.210.142:8052/CheckLoginCredentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          loginUsername: name.value,\n          loginPassword: password.value,\n        }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const message = data.message || 'Login successfully. The easiest way to start with your amazing application.';\n        Alert.alert('Login successfully', message);\n        // handle success, navigate to next screen\n        navigation.reset({\n          index: 0,\n          routes: [{ name: 'BottomTabNavigation' }],\n        });\n      } else {\n        const errorData = await response.json();\n        // handle error, display error message\n        const errorMessage = errorData.error || 'Login failed. Please check your credentials.';\n        Alert.alert('Login Failed', errorMessage);\n      }\n    } catch (error) {\n      // console.error('An error occurred during login:', error);\n      // handle error, display error message\n      Alert.alert('Error', 'An error occurred during login. Please try again later.');\n    }\n  };\n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Welcome back</Header>\n      <TextInput label=\"Name\" returnKeyType=\"next\" value={name.value} onChangeText={(text) => setName({ value: text, error: '' })} error={!!name.error} errorText={name.error}/>\n      <TextInput label=\"Password\" returnKeyType=\"done\" value={password.value} onChangeText={(number) => setPassword({ value: number, error: '' })} error={!!password.error} errorText={password.error} secureTextEntry />\n      <Button mode=\"contained\" onPress={onLoginPressed}>Login</Button>\n      <View style={styles.row}>\n        <Text>Donâ€™t have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}